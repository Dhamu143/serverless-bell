AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  serverless-bell

Parameters:
  IndexFaceRekognitionCollection:
    Type: String
    Default: 'serverless-bell-faces-collection'
  ResizeMaxWidth:
    Type: Number
    Default: 400
  SlackUrl:
    Type: String
  ApiGwStage:
    Type: String
    Default: 'dev'
  PresignedUrlExpirySeconds:
    Type: Number
    Default: 60

Globals:
  Function:
    Timeout: 10
  Api:
    OpenApiVersion: 3.0.1

Resources:
  IndexFace:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/index_face/
      Handler: app.handler
      Runtime: python3.8
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: s3:GetObject*
              Resource: !Sub "arn:aws:s3:::serverless-bell-index-bucket-${AWS::AccountId}/*"
            - Effect: Allow
              Action: rekognition:IndexFaces
              Resource: !Sub "arn:aws:rekognition:${AWS::Region}:${AWS::AccountId}:collection/${IndexFaceRekognitionCollection}"
      Environment:
        Variables:
          REKOGNITION_COLLECTION: !Ref IndexFaceRekognitionCollection
      Events:
        IndexFaceS3Event:
          Type: S3
          Properties:
            Bucket: !Ref FaceIndexUploadBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: uploads/

  InitProcess:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/init_process/
      Handler: app.handler
      Runtime: python3.8
      Policies:
        - StepFunctionsExecutionPolicy:
            StateMachineName: !GetAtt ServerlessBellStateMachine.Name
      Environment:
        Variables:
          STATE_MACHINE_ARN: !Ref ServerlessBellStateMachine
      Events:
        DetectFacesS3Event:
          Type: S3
          Properties:
            Bucket: !Ref FaceDetectUploadBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: uploads/

  DetectFaces:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/detect_faces/
      Handler: app.handler
      Runtime: python3.8
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: s3:GetObject*
              Resource: !Sub "arn:aws:s3:::serverless-bell-upload-bucket-${AWS::AccountId}/*"
            - Effect: Allow
              Action:
                - rekognition:DetectFaces
                - rekognition:SearchFacesByImage
              Resource: "*"
      Environment:
        Variables:
          REKOGNITION_COLLECTION: !Ref IndexFaceRekognitionCollection

  ResizeImage:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/resize_image/
      Handler: app.handler
      Runtime: python3.8
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: 
                - s3:GetObject*
              Resource: !Sub "arn:aws:s3:::serverless-bell-upload-bucket-${AWS::AccountId}/*"
            - Effect: Allow
              Action: 
                - s3:PutObject*
              Resource: !Sub "arn:aws:s3:::serverless-bell-upload-bucket-${AWS::AccountId}/resized/*"
      Environment:
        Variables:
          RESIZE_MAX_WIDTH: !Ref ResizeMaxWidth

  AddWatermark:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/add_watermark/
      Handler: app.handler
      Runtime: python3.8
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: 
                - s3:GetObject*
              Resource: !Sub "arn:aws:s3:::serverless-bell-upload-bucket-${AWS::AccountId}/resized/*"
            - Effect: Allow
              Action: 
                - s3:PutObject*
              Resource: !Sub "arn:aws:s3:::serverless-bell-upload-bucket-${AWS::AccountId}/preview/*"
  
  SendToSlack:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/send_to_slack/
      Handler: app.handler
      Runtime: python3.8
      Environment:
        Variables:
          REGION: !Sub ${AWS::Region}
          SLACK_URL: !Ref SlackUrl

  ServerlessBellStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: src/state_machine/state_machine.json
      DefinitionSubstitutions:
        DetectFacesFunctionArn: !GetAtt DetectFaces.Arn
        ResizeImageFunctionArn: !GetAtt ResizeImage.Arn
        AddWatermarkFunctionArn: !GetAtt AddWatermark.Arn
        SendToSlackFunctionArn: !GetAtt SendToSlack.Arn
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref DetectFaces
        - LambdaInvokePolicy:
            FunctionName: !Ref ResizeImage
        - LambdaInvokePolicy:
            FunctionName: !Ref AddWatermark
        - LambdaInvokePolicy:
            FunctionName: !Ref SendToSlack

  FaceIndexUploadBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "serverless-bell-index-bucket-${AWS::AccountId}"
      CorsConfiguration:
        CorsRules:
          - AllowedMethods:
              - "PUT"
              - "GET"
            AllowedHeaders:
              - "X-Forwarded-For"
              - "x-amz-meta-user"
            AllowedOrigins:
              - "*"
            MaxAge: 60

  FaceDetectUploadBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "serverless-bell-upload-bucket-${AWS::AccountId}"

  FaceIndexErrorSNS:
    Type: AWS::SNS::Topic
  
  FaceIndexHostingS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html
  
  FaceIndexHostingS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: FaceIndexHostingS3BucketPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !Ref FaceIndexHostingS3Bucket
                - /*
      Bucket: !Ref FaceIndexHostingS3Bucket

  FaceIndexFileUploadApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref ApiGwStage
      Cors:
        AllowMethods: "'OPTIONS,POST,GET'"
        AllowHeaders: "'Content-Type'"
        AllowOrigin: "'*'"
      EndpointConfiguration: REGIONAL

  GeneratePresignedUrl:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/generate_presigned_url/
      Handler: app.index
      Runtime: python3.8
      Environment:
        Variables:
          S3BUCKET: 
            Ref: FaceIndexUploadBucket
          EXPIRY_TIME: 
            Ref: PresignedUrlExpirySeconds
      Policies:
        - S3WritePolicy:
            BucketName:
              Ref: FaceIndexUploadBucket
      Events:
        GenerateUrlApi:
          Type: Api
          Properties:
            Path: /presigned_generate
            Method: post
            RestApiId:
              Ref: FaceIndexFileUploadApiGatewayApi

Outputs:
  FaceIndexUploadBucketName:
    Description: "Face index upload bucket"
    Value: !Ref FaceIndexUploadBucket
  FaceDetectUploadBucketName:
    Description: "Face detect upload bucket"
    Value: !Ref FaceDetectUploadBucket
  FaceIndexFunction:
    Description: "FaceIndex Function"
    Value: !GetAtt IndexFace.Arn
  ProcessInitFunction:
    Description: "Process init Function"
    Value: !GetAtt InitProcess.Arn
  DetectFacesFunction:
    Description: "DetectFaces Function"
    Value: !GetAtt DetectFaces.Arn
  ResizeImageFunction:
    Description: "ResizeImage Function"
    Value: !GetAtt ResizeImage.Arn
  AddWatermarkFunction:
    Description: "AddWatermark Function"
    Value: !GetAtt AddWatermark.Arn
  SendToSlackFunction:
    Description: "SendToSlack Function"
    Value: !GetAtt SendToSlack.Arn
  StateMachineArn:
    Description: "State machine"
    Value: !Ref ServerlessBellStateMachine
  GeneratePresignedUrl:
    Description: "API Gateway endpoint for generate presigned url"
    Value: !Sub "https://${FaceIndexFileUploadApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/${ApiGwStage}/presigned_generate/"
  FaceIndexHostingS3Bucket:
    Value: !Ref FaceIndexHostingS3Bucket
    Description: Face Index Website hosted bucket name
  FaceIndexWebsiteURL:
    Value: !GetAtt FaceIndexHostingS3Bucket.WebsiteURL
    Description: Face Index web site URL
